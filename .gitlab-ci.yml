variables:
  # Vault-required variable: path of the cwd to allow docker-based operations to work
  CREDS_SECRET_ROOT: $CI_PROJECT_DIR

stages:
  - build
  - prodsec-review
  - publish

include:
  - project: 'prodsec/scp-scanning/gitlab-checkmarx'
    ref: latest
    file: '/templates/.sast_scan.yml'

  - project: "prodsec/whitesource"
    ref: latest
    file: "/templates/.whitesource.yml"

sast-scanner:
  stage: prodsec-review
  extends: .sast_scan
  variables:
    SAST_SCANNER: "Semgrep"
    SEMGREP_EXCLUDE: "vendor,*_mock.go"
    alert_mode: "on" # Alert mode turned off
  allow_failure: False
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^release\//'

whitesource:
  stage: prodsec-review
  extends: .whitesource
  timeout: 240 minutes
  #when: manual
  variables:
    ws_user_key: ${WHITESOURCE_USER_KEY}
    product_id: ${WHITESOURCE_ID}
    config: python-pip
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^release\//'

build_linux:
  stage: build
  allow_failure: true
  image: ${LINUX_BUILD_IMAGE}
  artifacts:
    paths:
      - build/Splunk_SA_Scientific_Python_linux_x86_64.tgz
    untracked: false
    expire_in: 30 days
  before_script:
    - apt-get update -y && apt-get -y install rsync
  script:
    - bash repack.sh license
    - bash repack.sh build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^release\//'

build_windows:
  stage: build
  allow_failure: true
  image: ${WINDOWS_BUILD_IMAGE}
  artifacts:
    paths:
      - build/Splunk_SA_Scientific_Python_windows_x86_64.tgz
    untracked: false
    expire_in: 30 days
  script:
    - powershell .\repack.ps1 license
    - powershell .\repack.ps1 build
  tags:
    - psc-win64
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^release\//'

#build_osx:
#  stage: build
#  allow_failure: true
#  artifacts:
#    paths:
#      - build/Splunk_SA_Scientific_Python_darwin_x86_64.tgz
#    untracked: false
#    expire_in: 30 days
#  script:
#    - bash repack.sh license
#    - bash repack.sh build
#  tags:
#    - mac64

publish_artifacts:
  stage: publish
  dependencies:
    - build_linux
    - build_windows
#    - build_osx
  image: docker.bintray.io/jfrog/jfrog-cli-go:latest
  script:
    - apk add --no-cache git
    - jfrog rt config artifactory_config --url $ARTIFACTORY_URL --user $ARTIFACTORY_USER --apikey $ARTIFACTORY_PASS
    - CI_MERGE_REQUEST_IID=$CI_MERGE_REQUEST_IID $CI_PROJECT_DIR/repack.sh publish
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^release\//'
